buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    gradlePluginPortal()
    mavenLocal()
    google()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
  }
  dependencies {


  }
}

allprojects {
  apply plugin: 'eclipse'
  apply plugin: 'idea'

  idea {
    module {
      outputDir file('build/classes/java/main')
      testOutputDir file('build/classes/java/test')
    }
  }
}

configure(subprojects) {
  apply plugin: 'java-library'
  sourceCompatibility = 21
  targetCompatibility = 21
  
  // The 'java' block should be here, inside configure(subprojects)
  java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
  }

  tasks.register('generateAssetList') {
    inputs.dir("${project.rootDir}/assets/")
    File assetsFolder = new File("${project.rootDir}/assets/")
    File assetsFile = new File(assetsFolder, "assets.txt")
    assetsFile.delete()

    fileTree(assetsFolder).collect { assetsFolder.relativePath(it) }.sort().each {
      assetsFile.append(it + "\n")
    }
  }
  processResources.dependsOn 'generateAssetList'

  compileJava {
    options.incremental = true
  }
}

subprojects {
  version = "$projectVersion"
  ext.appName = 'Sample'
  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    mavenLocal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }
  }
}

eclipse.project.name = 'Sample' + '-parent'


project(':server') {
    apply plugin: 'application'

    dependencies {
        implementation project(':core')
        implementation 'com.zaxxer:HikariCP:5.1.0'
        implementation 'org.xerial:sqlite-jdbc:3.45.1.0'
        implementation 'com.google.code.gson:gson:2.10.1' 
    }

    mainClassName = 'com.yourgame.server.Server'
}

project(':core') {
    task testClient(type: JavaExec) {
        classpath = sourceSets.main.runtimeClasspath
        mainClass = "com.yourgame.network.ClientTester"
    }
}